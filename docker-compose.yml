version: '3.8'

services:
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data  # Redis 데이터 저장
    restart: always

  celery:
    build:
      context: .
      dockerfile: docker/Dockerfile-celery  # Celery 전용 Dockerfile 경로
    volumes:
      - static_volume:/app/staticfiles  # 필요한 경우 파일 공유
      - media_volume:/app/staticfiles  # 필요한 경우 파일 공유
    depends_on:
      - redis  # Redis와 연결
    env_file:
      - ./resources/envs/.env  # .env 파일에서 환경 변수 가져오기
    restart: always

  diary_app:
    build:
      context: .
      dockerfile: docker/Dockerfile  # Dockerfile 경로가 다를 경우 수정
    volumes:
      - static_volume:/app/staticfiles  # static 파일 볼륨
      - media_volume:/app/staticfiles  # media 파일 볼륨 (필요시)
    ports:
      - "18000:8000"
    env_file:
      - ./resources/envs/.env  # 환경 변수 파일 설정
    depends_on:
      - redis
      - celery  # Celery가 동작하는지 확인

  flower:
    image: mher/flower:latest  # Flower 이미지
    ports:
      - "5555:5555"  # Flower 웹 대시보드에 접근할 포트
    env_file:
      - ./resources/envs/.env  # .env 파일을 통해 환경 변수 설정
    depends_on:
      - redis
      - celery  # Celery 작업자 실행 후 Flower 사용 가능
    restart: always

  nginx:
    image: nginx:latest
    container_name: nginx_container
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./resources/nginx/nginx.conf:/etc/nginx/nginx.conf:ro  # Nginx 기본 설정 파일 매핑
      - static_volume:/app/staticfiles:ro  # 읽기 전용 설정
      - media_volume:/app/staticfiles:ro  # 읽기 전용 설정
      - ./resources/ssl/localhost.pem:/etc/nginx/ssl/localhost.pem:ro  # 읽기 전용 설정
      - ./resources/ssl/localhost-key.pem:/etc/nginx/ssl/localhost-key.pem:ro  # 읽기 전용 설정
    environment:
      SERVER_NAME: diary_app  # diary_app 서비스 이름으로 지정
      SERVER_PORT: 8000  # Django Gunicorn 포트 설정
    depends_on:
      - diary_app
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    restart: always  # 자동 재시작 설정

volumes:
  db_data:
  static_volume:
  media_volume:
  redis_data:

networks:
  default:
    driver: bridge